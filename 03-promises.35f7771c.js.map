{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,aAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,SAAUF,SAASC,cAAc,uBACjCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,wBAClCI,OAAQL,SAASC,cAAc,0BAGjCH,EAAKC,KAAKO,iBAAiB,UAAU,SAAAC,GACnCA,EAAIC,iBAKJ,IAJA,IAAMC,EAAQX,EAAKI,SAASQ,MACtBC,EAAOb,EAAKK,QAAQO,MACpBE,EAASd,EAAKM,UAAUM,MAC1BG,EAAeJ,EACVK,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAAG,CACnB1B,EAAc0B,EAAGD,GAE9BE,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAA+B,OAAgBC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAA+B,OAAgBI,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjDuB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst Notiflix = require('notiflix');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInp: document.querySelector('input[name=\"delay\"]'),\n  stepInp: document.querySelector('input[name=\"step\"]'),\n  amountInp: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const delay = refs.delayInp.value;\n  const step = refs.stepInp.value;\n  const amount = refs.amountInp.value;\n  let currentDelay = delay;\n  for (let i = 1; i <= amount; i += 1) {\n    const promise = createPromise(i, currentDelay);\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    currentDelay += step;\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInp","stepInp","amountInp","button","addEventListener","evt","preventDefault","delay1","value","step","amount","currentDelay","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.35f7771c.js.map"}